name: Continuous EC2 Deployment
on:
  workflow_dispatch:
    inputs:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: false
        type: string
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: false
        type: string
  workflow_run:
    workflows: [ Continuous Build ]
    types: [ completed ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  HUB_USER: flaviuspetrisor
  AWS_REGION: eu-central-1
  HUB_REPO: "hub.docker.com"

jobs:
  Deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    container:
      image: flaviuspetrisor/qed:base
      credentials:
        username: ${{ env.HUB_USER }}
        password: ${{ secrets.HUB_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Github Credentials
        uses: ./.github/actions/git-config
        with:
          GIT_PAT: ${{ secrets.GIT_PAT }}

      - name: Configure AWS Account
        if: ${{ inputs.AWS_ACCESS_KEY_ID == '' }}
        uses: ./.github/actions/aws-account-setup
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Configure AWS Account
        if: ${{ inputs.AWS_ACCESS_KEY_ID != '' }}
        uses: ./.github/actions/aws-account-setup
        with:
          AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}

      - name: Run Deployment
        run: |
          unbuffer aws ssm start-session --target ${{ secrets.EC2_ID }} --document-name AWS-StartInteractiveCommand --parameters command="echo Starting Deployment
          sudo docker login -u ${{ env.HUB_USER }} -p ${{ secrets.HUB_PASS }}
          sudo docker pull ${{ env.HUB_USER }}/qed
          sudo docker rm -f $(docker ps -q)
          sudo docker run -d -p 80:3000 ${{ env.HUB_USER }}/qed"
        shell: bash

      - name: Workspace Clean
        if: always()
        run: find . -mindepth 1 -maxdepth 1 -exec rm -rf {} + || true
