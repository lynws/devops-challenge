name: First Deployment
on:
  workflow_dispatch:
    inputs:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: false
        type: string
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: false
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions: write-all

jobs:
  Scratch-Deploy:
    runs-on: ubuntu-latest
    container:
      image: flaviuspetrisor/qed:base
      credentials:
        username: ${{ env.HUB_USER }}
        password: ${{ secrets.HUB_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Github Credentials
        uses: ./.github/actions/git-config
        with:
          GIT_PAT: ${{ secrets.GIT_PAT }}

      - name: Configure AWS Account
        if: ${{ inputs.AWS_ACCESS_KEY_ID == '' }}
        uses: ./.github/actions/aws-account-setup
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Configure AWS Account
        if: ${{ inputs.AWS_ACCESS_KEY_ID != '' }}
        uses: ./.github/actions/aws-account-setup
        with:
          AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}

      - name: Save Dockerub env to SM
        run: |
          echo '{"HUB_PASS":"'"${{ secrets.HUB_PASS }}"'"}' | jq -c '.' > secret.json
          aws secretsmanager create-secret --name HUB-TOKEN --secret-string file://secret.json
        shell: bash

      - name: Terraform Apply
        working-directory: ./infra
        run: |
          terraform init
          terraform apply -auto-approve
        shell: bash

      - name: List and Save EC2 ID with Public IP
        run: |
          INSTANCE_ID=$(terraform output -raw instance_id)
          PUBLIC_IP=$(terraform output -raw public_ip)
          echo "Public IP: $PUBLIC_IP"
          echo "Instance ID: $INSTANCE_ID"
          curl -X PUT -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GIT_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/lynws/devops-challenge/actions/secrets/EC2_ID -d '{"encrypted_value":"'$INSTANCE_ID'","key_id":"3380204578043523366"}'
        shell: bash

      - name: Workspace Clean
        if: always()
        run: find . -mindepth 1 -maxdepth 1 -exec rm -rf {} + || true
